extends Node

onready var dirt_tilemap = $DirtTileMap;
onready var wall_tiemap = $WallTileMap;

var rng: RandomNumberGenerator = RandomNumberGenerator.new();

var CellSize: Vector2 = Vector2(16, 16);
var width: int = 512/CellSize.x; #Tile pos instead of pixels
var height: int = 288/CellSize.y; #Tile pos instead of pixels
var grid: Array = [];

var Tiles = {
	"Empty": -1,
	"Wall": 0,
	"Floor": 1
};

func _init_grid():
	grid = [];
	for x in width:
		grid.append([]);
		for y in height:
			grid[x].append(Tiles.Empty);
	#creates bi-dimensional array, grid, filled with -1 (aka Tiles.Empty)

func GetRandomDirection():
	var directions: Array = [[-1, 0], [1, 0], [0, 1], [0,-1]];
	var direction: Array = directions[rng.randi()%4]; # A random value between 0 and 3
	return Vector2(direction[0], direction[1]);

func is_dir_in_bounds(dir: Vector2, bound_start: Vector2, bound_end: Vector2) -> bool:
	if (dir.x >= bound_start.x and dir.x < bound_end.x
		and dir.y >= bound_start.y and dir.y < bound_end.y):
		return true;
	else:
		return false;

func _create_random_path():
	var max_iterations: int = 1000;
	var itr = 0;
	var walker: Vector2 = Vector2.ZERO;
	
	while itr < max_iterations:
		# Perform random walk
		# 1- Choose random direction
		# 2- Check that direction is in bounds
		# 3- move in that direction
		var random_direction = GetRandomDirection();
		if is_dir_in_bounds(walker + random_direction, Vector2.ZERO, Vector2(width, height)):
			walker+= random_direction;
			grid[walker.x][walker.y] = Tiles.Floor;
			itr+=1;

func _spawn_tiles():
	for x in width:
		for y in height:
			match grid[x][y]:
				Tiles.Empty:
					pass;
				Tiles.Floor:
					dirt_tilemap.set_cellv(Vector2(x, y), 0);
				Tiles.Wall:
					pass;

func _clear_tilemaps():
	for x in width:
		for y in height:
			dirt_tilemap.clear();
			wall_tiemap.clear();
	
	dirt_tilemap.update_bitmask_region();
	wall_tiemap.update_bitmask_region();

func _ready():
	_generate_map();

func _generate_map():
	rng.randomize();
	_init_grid();
	_clear_tilemaps();
	_create_random_path();
	_spawn_tiles();
	# The update_bitmask_region it's necessary to make the
	# Autotile work with autogenerated maps
	dirt_tilemap.update_bitmask_region();
	wall_tiemap.update_bitmask_region();

func _input(event):
	if Input.is_key_pressed(KEY_SPACE):
		_generate_map();
